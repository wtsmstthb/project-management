{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/components/Header/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype Props = {\r\n    name: string;\r\n    buttonComponent?: any;\r\n    isSmallText?: boolean;\r\n}\r\n\r\nconst Header = ({\r\n    name,\r\n    buttonComponent,\r\n    isSmallText = false\r\n}: Props) => {\r\n  return (\r\n    <div className='mb-5 flex w-full items-center justify-between'>\r\n      <h1 className={` ${isSmallText ? 'text-lg' : 'text-2xl'} font-semibold dark:text-white`}>\r\n        {name}\r\n      </h1>\r\n        {buttonComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EACZ,IAAI,EACJ,eAAe,EACf,cAAc,KAAK,EACf;IACN,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAW,CAAC,CAAC,EAAE,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BACpF;;;;;;YAEA;;;;;;;AAGT;uCAEe","debugId":null}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/lib/utils.ts"],"sourcesContent":["export const dataGridClassNames =\r\n  \"border border-gray-200 bg-white shadow dark:border-stroke-dark dark:bg-dark-secondary dark:text-gray-200\";\r\n\r\nexport const dataGridSxStyles = (isDarkMode: boolean) => {\r\n  return {\r\n    \"& .MuiDataGrid-columnHeaders\": {\r\n      color: `${isDarkMode ? \"#e5e7eb\" : \"\"}`,\r\n      '& [role=\"row\"] > *': {\r\n        backgroundColor: `${isDarkMode ? \"#1d1f21\" : \"white\"}`,\r\n        borderColor: `${isDarkMode ? \"#2d3135\" : \"\"}`,\r\n      },\r\n    },\r\n    \"& .MuiIconbutton-root\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiTablePagination-selectIcon\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: `1px solid ${isDarkMode ? \"#2d3135\" : \"e5e7eb\"}`,\r\n    },\r\n    \"& .MuiDataGrid-withBorderColor\": {\r\n      borderColor: `${isDarkMode ? \"#2d3135\" : \"e5e7eb\"}`,\r\n    },\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAO,MAAM,qBACX;AAEK,MAAM,mBAAmB,CAAC;IAC/B,OAAO;QACL,gCAAgC;YAC9B,OAAO,GAAG,aAAa,YAAY,IAAI;YACvC,sBAAsB;gBACpB,iBAAiB,GAAG,aAAa,YAAY,SAAS;gBACtD,aAAa,GAAG,aAAa,YAAY,IAAI;YAC/C;QACF;QACA,yBAAyB;YACvB,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,8BAA8B;YAC5B,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,oCAAoC;YAClC,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,uBAAuB;YACrB,QAAQ;QACV;QACA,sBAAsB;YACpB,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,UAAU;QAChE;QACA,kCAAkC;YAChC,aAAa,GAAG,aAAa,YAAY,UAAU;QACrD;IACF;AACF","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/app/teams/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useGetTeamsQuery } from \"@/app/state/api\";\r\nimport React from \"react\";\r\nimport { useAppSelector } from \"../redux\";\r\nimport Header from \"@/components/Header\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n} from \"@mui/x-data-grid\";\r\nimport ExcelJS from \"exceljs\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { dataGridClassNames, dataGridSxStyles } from \"@/lib/utils\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"id\", headerName: \"Team ID\", width: 100 },\r\n  { field: \"teamName\", headerName: \"Team Name\", width: 200 },\r\n  { field: \"productOwnerUsername\", headerName: \"Product Owner\", width: 200 },\r\n  { field: \"projectManagerUsername\", headerName: \"Project Manager\", width: 200 },\r\n];\r\n\r\nconst Teams = () => {\r\n  const { data: teams, isLoading, isError } = useGetTeamsQuery();\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  const handleExport = async () => {\r\n    const workbook = new ExcelJS.Workbook();\r\n    const worksheet = workbook.addWorksheet(\"Teams\");\r\n\r\n    worksheet.columns = [\r\n      { header: \"Team ID\", key: \"id\", width: 10 },\r\n      { header: \"Team Name\", key: \"teamName\", width: 30 },\r\n      { header: \"Product Owner\", key: \"productOwnerUsername\", width: 30 },\r\n      { header: \"Project Manager\", key: \"projectManagerUsername\", width: 30 },\r\n    ];\r\n\r\n    worksheet.addRows(teams || []);\r\n\r\n    const buffer = await workbook.xlsx.writeBuffer();\r\n    const blob = new Blob([buffer], {\r\n      type:\r\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\r\n    });\r\n    saveAs(blob, \"teams.xlsx\");\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError || !teams) return <div>Error fetching teams</div>;\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col p-8\">\r\n      <Header name=\"Teams\" />\r\n      <div className=\"mb-4 flex justify-end\">\r\n        <button\r\n          onClick={handleExport}\r\n          className=\"rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700\"\r\n        >\r\n          Export to Excel\r\n        </button>\r\n      </div>\r\n      <div style={{ height: 650, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={teams || []}\r\n          columns={columns}\r\n          pagination\r\n          className={dataGridClassNames}\r\n          sx={dataGridSxStyles(isDarkMode)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Teams;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AAXA;;;;;;;;;AAaA,MAAM,UAAwB;IAC5B;QAAE,OAAO;QAAM,YAAY;QAAW,OAAO;IAAI;IACjD;QAAE,OAAO;QAAY,YAAY;QAAa,OAAO;IAAI;IACzD;QAAE,OAAO;QAAwB,YAAY;QAAiB,OAAO;IAAI;IACzE;QAAE,OAAO;QAA0B,YAAY;QAAmB,OAAO;IAAI;CAC9E;AAED,MAAM,QAAQ;IACZ,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,mBAAgB,AAAD;IAC3D,MAAM,aAAa,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,QAAU,MAAM,MAAM,CAAC,UAAU;IAEpE,MAAM,eAAe;QACnB,MAAM,WAAW,IAAI,gIAAA,CAAA,UAAO,CAAC,QAAQ;QACrC,MAAM,YAAY,SAAS,YAAY,CAAC;QAExC,UAAU,OAAO,GAAG;YAClB;gBAAE,QAAQ;gBAAW,KAAK;gBAAM,OAAO;YAAG;YAC1C;gBAAE,QAAQ;gBAAa,KAAK;gBAAY,OAAO;YAAG;YAClD;gBAAE,QAAQ;gBAAiB,KAAK;gBAAwB,OAAO;YAAG;YAClE;gBAAE,QAAQ;gBAAmB,KAAK;gBAA0B,OAAO;YAAG;SACvE;QAED,UAAU,OAAO,CAAC,SAAS,EAAE;QAE7B,MAAM,SAAS,MAAM,SAAS,IAAI,CAAC,WAAW;QAC9C,MAAM,OAAO,IAAI,KAAK;YAAC;SAAO,EAAE;YAC9B,MACE;QACJ;QACA,CAAA,GAAA,yJAAA,CAAA,SAAM,AAAD,EAAE,MAAM;IACf;IAEA,IAAI,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAC3B,IAAI,WAAW,CAAC,OAAO,qBAAO,8OAAC;kBAAI;;;;;;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAA,CAAA,UAAM;gBAAC,MAAK;;;;;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;;;;;;0BAIH,8OAAC;gBAAI,OAAO;oBAAE,QAAQ;oBAAK,OAAO;gBAAO;0BACvC,cAAA,8OAAC,yKAAA,CAAA,WAAQ;oBACP,MAAM,SAAS,EAAE;oBACjB,SAAS;oBACT,UAAU;oBACV,WAAW,mHAAA,CAAA,qBAAkB;oBAC7B,IAAI,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE;;;;;;;;;;;;;;;;;AAK/B;uCAEe","debugId":null}}]
}