{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/components/Header/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype Props = {\r\n    name: string;\r\n    buttonComponent?: any;\r\n    isSmallText?: boolean;\r\n}\r\n\r\nconst Header = ({\r\n    name,\r\n    buttonComponent,\r\n    isSmallText = false\r\n}: Props) => {\r\n  return (\r\n    <div className='mb-5 flex w-full items-center justify-between'>\r\n      <h1 className={` ${isSmallText ? 'text-lg' : 'text-2xl'} font-semibold dark:text-white`}>\r\n        {name}\r\n      </h1>\r\n        {buttonComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EACZ,IAAI,EACJ,eAAe,EACf,cAAc,KAAK,EACf;IACN,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAW,CAAC,CAAC,EAAE,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BACpF;;;;;;YAEA;;;;;;;AAGT;uCAEe","debugId":null}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/lib/utils.ts"],"sourcesContent":["export const dataGridClassNames =\r\n  \"border border-gray-200 bg-white shadow dark:border-stroke-dark dark:bg-dark-secondary dark:text-gray-200\";\r\n\r\nexport const dataGridSxStyles = (isDarkMode: boolean) => {\r\n  return {\r\n    \"& .MuiDataGrid-columnHeaders\": {\r\n      color: `${isDarkMode ? \"#e5e7eb\" : \"\"}`,\r\n      '& [role=\"row\"] > *': {\r\n        backgroundColor: `${isDarkMode ? \"#1d1f21\" : \"white\"}`,\r\n        borderColor: `${isDarkMode ? \"#2d3135\" : \"\"}`,\r\n      },\r\n    },\r\n    \"& .MuiIconbutton-root\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiTablePagination-root\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiTablePagination-selectIcon\": {\r\n      color: `${isDarkMode ? \"#a3a3a3\" : \"\"}`,\r\n    },\r\n    \"& .MuiDataGrid-cell\": {\r\n      border: \"none\",\r\n    },\r\n    \"& .MuiDataGrid-row\": {\r\n      borderBottom: `1px solid ${isDarkMode ? \"#2d3135\" : \"e5e7eb\"}`,\r\n    },\r\n    \"& .MuiDataGrid-withBorderColor\": {\r\n      borderColor: `${isDarkMode ? \"#2d3135\" : \"e5e7eb\"}`,\r\n    },\r\n  };\r\n};"],"names":[],"mappings":";;;;AAAO,MAAM,qBACX;AAEK,MAAM,mBAAmB,CAAC;IAC/B,OAAO;QACL,gCAAgC;YAC9B,OAAO,GAAG,aAAa,YAAY,IAAI;YACvC,sBAAsB;gBACpB,iBAAiB,GAAG,aAAa,YAAY,SAAS;gBACtD,aAAa,GAAG,aAAa,YAAY,IAAI;YAC/C;QACF;QACA,yBAAyB;YACvB,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,8BAA8B;YAC5B,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,oCAAoC;YAClC,OAAO,GAAG,aAAa,YAAY,IAAI;QACzC;QACA,uBAAuB;YACrB,QAAQ;QACV;QACA,sBAAsB;YACpB,cAAc,CAAC,UAAU,EAAE,aAAa,YAAY,UAAU;QAChE;QACA,kCAAkC;YAChC,aAAa,GAAG,aAAa,YAAY,UAAU;QACrD;IACF;AACF","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/app/users/page.tsx"],"sourcesContent":["\"use client\";\r\nimport { useGetUsersQuery } from \"@/app/state/api\";\r\nimport React from \"react\";\r\nimport { useAppSelector } from \"../redux\";\r\nimport Header from \"@/components/Header\";\r\nimport {\r\n  DataGrid,\r\n  GridColDef,\r\n  GridToolbar,\r\n} from \"@mui/x-data-grid\";\r\nimport Image from \"next/image\";\r\nimport { dataGridClassNames, dataGridSxStyles } from \"@/lib/utils\";\r\n\r\nconst columns: GridColDef[] = [\r\n  { field: \"userId\", headerName: \"ID\", width: 100 },\r\n  { field: \"username\", headerName: \"Username\", width: 150 },\r\n  {\r\n    field: \"profilePictureUrl\",\r\n    headerName: \"Profile Picture\",\r\n    width: 100,\r\n    renderCell: (params) => (\r\n      <div className=\"flex h-full w-full items-center justify-center\">\r\n        <div className=\"h-9 w-9\">\r\n          <Image\r\n            src={`/${params.value}`}\r\n            alt={params.row.username}\r\n            width={100}\r\n            height={50}\r\n            className=\"h-full rounded-full object-cover\"\r\n          />\r\n        </div>\r\n      </div>\r\n    ),\r\n  },\r\n];\r\n\r\nconst Users = () => {\r\n  const { data: users, isLoading, isError } = useGetUsersQuery();\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError || !users) return <div>Error fetching users</div>;\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col p-8\">\r\n      <Header name=\"Users\" />\r\n      <div style={{ height: 650, width: \"100%\" }}>\r\n        <DataGrid\r\n          rows={users || []}\r\n          columns={columns}\r\n          getRowId={(row) => row.userId}\r\n          pagination\r\n          slots={{\r\n            toolbar: GridToolbar,\r\n          }}\r\n          className={dataGridClassNames}\r\n          sx={{\r\n            ...dataGridSxStyles(isDarkMode),\r\n            '& .MuiDataGrid-toolbarContainer button': {\r\n              color: isDarkMode ? '#ffffff' : '#374151', // white / gray-700\r\n            },\r\n            '& .MuiDataGrid-toolbarContainer button:hover': {\r\n              backgroundColor: isDarkMode ? '#3b3d40' : '#e5e7eb', // dark-tertiary / gray-200\r\n            },\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"],"names":[],"mappings":";;;;AACA;AAEA;AACA;AACA;AAAA;AAKA;AACA;AAXA;;;;;;;;AAaA,MAAM,UAAwB;IAC5B;QAAE,OAAO;QAAU,YAAY;QAAM,OAAO;IAAI;IAChD;QAAE,OAAO;QAAY,YAAY;QAAY,OAAO;IAAI;IACxD;QACE,OAAO;QACP,YAAY;QACZ,OAAO;QACP,YAAY,CAAC,uBACX,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK,CAAC,CAAC,EAAE,OAAO,KAAK,EAAE;wBACvB,KAAK,OAAO,GAAG,CAAC,QAAQ;wBACxB,OAAO;wBACP,QAAQ;wBACR,WAAU;;;;;;;;;;;;;;;;IAKpB;CACD;AAED,MAAM,QAAQ;IACZ,MAAM,EAAE,MAAM,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0HAAA,CAAA,mBAAgB,AAAD;IAC3D,MAAM,aAAa,CAAA,GAAA,oHAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,QAAU,MAAM,MAAM,CAAC,UAAU;IAEpE,IAAI,WAAW,qBAAO,8OAAC;kBAAI;;;;;;IAC3B,IAAI,WAAW,CAAC,OAAO,qBAAO,8OAAC;kBAAI;;;;;;IAEnC,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,qIAAA,CAAA,UAAM;gBAAC,MAAK;;;;;;0BACb,8OAAC;gBAAI,OAAO;oBAAE,QAAQ;oBAAK,OAAO;gBAAO;0BACvC,cAAA,8OAAC,yKAAA,CAAA,WAAQ;oBACP,MAAM,SAAS,EAAE;oBACjB,SAAS;oBACT,UAAU,CAAC,MAAQ,IAAI,MAAM;oBAC7B,UAAU;oBACV,OAAO;wBACL,SAAS,yLAAA,CAAA,cAAW;oBACtB;oBACA,WAAW,mHAAA,CAAA,qBAAkB;oBAC7B,IAAI;wBACF,GAAG,CAAA,GAAA,mHAAA,CAAA,mBAAgB,AAAD,EAAE,WAAW;wBAC/B,0CAA0C;4BACxC,OAAO,aAAa,YAAY;wBAClC;wBACA,gDAAgD;4BAC9C,iBAAiB,aAAa,YAAY;wBAC5C;oBACF;;;;;;;;;;;;;;;;;AAKV;uCAEe","debugId":null}}]
}