{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/components/Header/index.tsx"],"sourcesContent":["import React from 'react'\r\n\r\ntype Props = {\r\n    name: string;\r\n    buttonComponent?: any;\r\n    isSmallText?: boolean;\r\n}\r\n\r\nconst Header = ({\r\n    name,\r\n    buttonComponent,\r\n    isSmallText = false\r\n}: Props) => {\r\n  return (\r\n    <div className='mb-5 flex w-full items-center justify-between'>\r\n      <h1 className={` ${isSmallText ? 'text-lg' : 'text-2xl'} font-semibold dark:text-white`}>\r\n        {name}\r\n      </h1>\r\n        {buttonComponent}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header"],"names":[],"mappings":";;;;;AAQA,MAAM,SAAS,CAAC,EACZ,IAAI,EACJ,eAAe,EACf,cAAc,KAAK,EACf;IACN,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAW,CAAC,CAAC,EAAE,cAAc,YAAY,WAAW,8BAA8B,CAAC;0BACpF;;;;;;YAEA;;;;;;;AAGT;KAbM;uCAeS","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/HELLO/Tasklytics/client/src/app/timeline/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useAppSelector } from \"@/app/redux\";\r\nimport Header from \"@/components/Header\";\r\nimport { useGetProjectsQuery } from \"@/app/state/api\";\r\nimport { DisplayOption, Gantt, ViewMode } from \"@rsagiev/gantt-task-react-19\";\r\nimport \"@rsagiev/gantt-task-react-19/dist/index.css\";\r\nimport React, { useMemo, useState } from \"react\";\r\n\r\ntype TaskTypeItems = \"task\" | \"milestone\" | \"project\";\r\n\r\nconst Timeline = () => {\r\n  const isDarkMode = useAppSelector((state) => state.global.isDarkMode);\r\n  const { data: projects, isLoading, isError } = useGetProjectsQuery();\r\n\r\n  const [displayOptions, setDisplayOptions] = useState<DisplayOption>({\r\n    viewMode: ViewMode.Month,\r\n    locale: \"en-US\",\r\n  });\r\n\r\n  const ganttTasks = useMemo(() => {\r\n    return (\r\n      projects?.map((project) => ({\r\n        start: new Date(project.startDate as string),\r\n        end: new Date(project.endDate as string),\r\n        name: project.name,\r\n        id: `Project-${project.id}`,\r\n        type: \"project\" as TaskTypeItems,\r\n        progress: 50,\r\n        isDisabled: false,\r\n      })) || []\r\n    );\r\n  }, [projects]);\r\n\r\n  const handleViewModeChange = (\r\n    event: React.ChangeEvent<HTMLSelectElement>,\r\n  ) => {\r\n    setDisplayOptions((prev) => ({\r\n      ...prev,\r\n      viewMode: event.target.value as ViewMode,\r\n    }));\r\n  };\r\n\r\n  if (isLoading) return <div>Loading...</div>;\r\n  if (isError || !projects)\r\n    return <div>An error occurred while fetching projects</div>;\r\n\r\n  return (\r\n    <div className=\"max-w-full p-8\">\r\n      <header className=\"mb-4 flex items-center justify-between\">\r\n        <Header name=\"Projects Timeline\" />\r\n        <div className=\"relative inline-block w-64\">\r\n          <select\r\n            className=\"focus:shadow-outline block w-full appearance-none rounded border border-gray-400 bg-white px-4 py-2 pr-8 leading-tight shadow hover:border-gray-500 focus:outline-none dark:border-dark-secondary dark:bg-dark-secondary dark:text-white\"\r\n            value={displayOptions.viewMode}\r\n            onChange={handleViewModeChange}\r\n          >\r\n            <option value={ViewMode.Day}>Day</option>\r\n            <option value={ViewMode.Week}>Week</option>\r\n            <option value={ViewMode.Month}>Month</option>\r\n          </select>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"overflow-hidden rounded-md bg-white shadow dark:bg-dark-secondary dark:text-white\">\r\n        <div className=\"timeline\">\r\n          <Gantt\r\n            tasks={ganttTasks}\r\n            {...displayOptions}\r\n            columnWidth={displayOptions.viewMode === ViewMode.Month ? 150 : 100}\r\n            listCellWidth=\"100px\"\r\n            projectBackgroundColor={isDarkMode ? \"#101214\" : \"#1f2937\"}\r\n            projectProgressColor={isDarkMode ? \"#1f2937\" : \"#aeb8c2\"}\r\n            projectProgressSelectedColor={isDarkMode ? \"#000\" : \"#9ba1a6\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timeline;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;;;AAPA;;;;;;;AAWA,MAAM,WAAW;;IACf,MAAM,aAAa,CAAA,GAAA,uHAAA,CAAA,iBAAc,AAAD;+CAAE,CAAC,QAAU,MAAM,MAAM,CAAC,UAAU;;IACpE,MAAM,EAAE,MAAM,QAAQ,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,6HAAA,CAAA,sBAAmB,AAAD;IAEjE,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;QAClE,UAAU,uLAAA,CAAA,WAAQ,CAAC,KAAK;QACxB,QAAQ;IACV;IAEA,MAAM,aAAa,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;wCAAE;YACzB,OACE,UAAU;gDAAI,CAAC,UAAY,CAAC;wBAC1B,OAAO,IAAI,KAAK,QAAQ,SAAS;wBACjC,KAAK,IAAI,KAAK,QAAQ,OAAO;wBAC7B,MAAM,QAAQ,IAAI;wBAClB,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,EAAE;wBAC3B,MAAM;wBACN,UAAU;wBACV,YAAY;oBACd,CAAC;kDAAM,EAAE;QAEb;uCAAG;QAAC;KAAS;IAEb,MAAM,uBAAuB,CAC3B;QAEA,kBAAkB,CAAC,OAAS,CAAC;gBAC3B,GAAG,IAAI;gBACP,UAAU,MAAM,MAAM,CAAC,KAAK;YAC9B,CAAC;IACH;IAEA,IAAI,WAAW,qBAAO,6LAAC;kBAAI;;;;;;IAC3B,IAAI,WAAW,CAAC,UACd,qBAAO,6LAAC;kBAAI;;;;;;IAEd,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;;kCAChB,6LAAC,wIAAA,CAAA,UAAM;wBAAC,MAAK;;;;;;kCACb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BACC,WAAU;4BACV,OAAO,eAAe,QAAQ;4BAC9B,UAAU;;8CAEV,6LAAC;oCAAO,OAAO,uLAAA,CAAA,WAAQ,CAAC,GAAG;8CAAE;;;;;;8CAC7B,6LAAC;oCAAO,OAAO,uLAAA,CAAA,WAAQ,CAAC,IAAI;8CAAE;;;;;;8CAC9B,6LAAC;oCAAO,OAAO,uLAAA,CAAA,WAAQ,CAAC,KAAK;8CAAE;;;;;;;;;;;;;;;;;;;;;;;0BAKrC,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,uLAAA,CAAA,QAAK;wBACJ,OAAO;wBACN,GAAG,cAAc;wBAClB,aAAa,eAAe,QAAQ,KAAK,uLAAA,CAAA,WAAQ,CAAC,KAAK,GAAG,MAAM;wBAChE,eAAc;wBACd,wBAAwB,aAAa,YAAY;wBACjD,sBAAsB,aAAa,YAAY;wBAC/C,8BAA8B,aAAa,SAAS;;;;;;;;;;;;;;;;;;;;;;AAMhE;GApEM;;QACe,uHAAA,CAAA,iBAAc;QACc,6HAAA,CAAA,sBAAmB;;;KAF9D;uCAsES","debugId":null}}]
}