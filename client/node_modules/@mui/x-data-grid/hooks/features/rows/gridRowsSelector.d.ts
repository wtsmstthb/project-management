import { GridRowId } from "../../../models/gridRows.js";
import { GridStateCommunity } from "../../../models/gridStateCommunity.js";
export declare const gridRowsStateSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, unknown, import("@mui/x-data-grid").GridRowsState>;
export declare const gridRowCountSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, number>;
export declare const gridRowsLoadingSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, boolean | undefined>;
export declare const gridTopLevelRowCountSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, number>;
export declare const gridRowsLookupSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, import("@mui/x-data-grid").GridRowIdToModelLookup<import("@mui/x-data-grid").GridValidRowModel>>;
export declare const gridRowSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, GridRowId, import("@mui/x-data-grid").GridValidRowModel>;
export declare const gridRowTreeSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, import("@mui/x-data-grid").GridRowTreeConfig>;
export declare const gridRowNodeSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, GridRowId, import("@mui/x-data-grid").GridTreeNode>;
export declare const gridRowGroupsToFetchSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, GridRowId[] | undefined>;
export declare const gridRowGroupingNameSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, string>;
export declare const gridRowTreeDepthsSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, import("./gridRowsInterfaces.js").GridTreeDepths>;
export declare const gridRowMaximumTreeDepthSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, number>;
export declare const gridDataRowIdsSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, GridRowId[]>;
export declare const gridDataRowsSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowIdToModelLookup<import("@mui/x-data-grid").GridValidRowModel>, import("@mui/x-data-grid").GridValidRowModel[]>;
/**
 * @ignore - do not document.
 */
export declare const gridAdditionalRowGroupsSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, import("@mui/x-data-grid").GridRowsState, {
  pinnedRows?: import("./gridRowsInterfaces.js").GridPinnedRowsState;
} | undefined>;
/**
 * @ignore - do not document.
 */
export declare const gridPinnedRowsSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, {
  pinnedRows?: import("./gridRowsInterfaces.js").GridPinnedRowsState;
} | undefined, {
  bottom: {
    id: GridRowId;
    model: import("@mui/x-data-grid").GridValidRowModel;
  }[];
  top: {
    id: GridRowId;
    model: import("@mui/x-data-grid").GridValidRowModel;
  }[];
}>;
/**
 * @ignore - do not document.
 */
export declare const gridPinnedRowsCountSelector: import("@mui/x-data-grid").OutputSelector<GridStateCommunity, {
  bottom: {
    id: GridRowId;
    model: import("@mui/x-data-grid").GridValidRowModel;
  }[];
  top: {
    id: GridRowId;
    model: import("@mui/x-data-grid").GridValidRowModel;
  }[];
}, number>;