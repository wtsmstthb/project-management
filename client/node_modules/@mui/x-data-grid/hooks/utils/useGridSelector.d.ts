import { RefObject } from '@mui/x-internals/types';
import type { GridApiCommon } from "../../models/api/gridApiCommon.js";
import type { OutputSelector } from "../../utils/createSelector.js";
type Selector<Api extends GridApiCommon, Args, T> = ((apiRef: RefObject<Api>) => T) | ((apiRef: RefObject<Api | null>) => T) | OutputSelector<Api['state'], Args, T>;
export declare const objectShallowCompare: (a: unknown, b: unknown) => boolean;
export declare const argsEqual: (prev: any, curr: any) => boolean;
export declare const useGridSelector: <Api extends GridApiCommon, Args, T>(apiRef: RefObject<Api>, selector: Selector<Api, Args, T>, args?: Args, equals?: <U = T>(a: U, b: U) => boolean) => T;
export {};